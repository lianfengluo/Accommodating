"""
Django settings for accommodation project.

Generated by 'django-admin startproject' using Django 2.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import os
from .secret import *

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = MY_SECRET_KEY

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False if os.environ.get("DJANGO_DEBUG") == 'false' else True 
# DEBUG = True 
ALLOWED_HOSTS = ["localhost", '127.0.0.1', '0.0.0.0', '192.168.1.107']
FRONTEND_DOMAIN = "http://localhost:3000"
BACKEND_DOMAIN = 'http://localhost:9000' if DEBUG else os.environ.get("WEB_DOMAIN") 

if DEBUG:
    # if it's in the debug mode,
    # it will allow all cors origin request
    CORS_ORIGIN_ALLOW_ALL = True
else:
    CORS_ORIGIN_WHITELIST = BACKEND_DOMAIN

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    # 'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'rest_framework.authtoken',
    'user',
    'accommodation',
    "message",
    'corsheaders',
    'django_extensions',
]
CORS_ALLOW_CREDENTIALS = True
GOOGLE_API_KEY = "AIzaSyBfRNtUwUGwjJdVxczFDjczbFK1q1yDeOU"

# setting the rest framework configuration
REST_FRAMEWORK = {
    'DEFAULT_RENDERER_CLASSES': [
        'rest_framework.renderers.JSONRenderer',
        'rest_framework.renderers.BrowsableAPIRenderer',
    ],
    "DEFAULT_PERMISSION_CLASSES": ("rest_framework.permissions.IsAuthenticated",),
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.BasicAuthentication',
        # 'rest_framework.authentication.SessionAuthentication',
    ],
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.LimitOffsetPagination',
    'PAGE_SIZE': 20,
}

# user setting
AUTH_USER_MODEL = "user.User"

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

# root url
ROOT_URLCONF = 'Accommodating.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'public/')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'Accommodating.wsgi.application'

SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')

# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases

# Databases setting
DATABASES = {
    'default': {'ENGINE': 'django.db.backends.postgresql_psycopg2',
                'HOST': 'db',
                'NAME': DATABAE_NAME,     # <DATABAE_NAME>
                'USER': DATABAE_USERNAME,     # <DATABAE_USERNAME>
                'PASSWORD': DATABASE_PASSWORD,  # <DATABASE_PASSWORD>
                'PORT': '5432'}
}

# Setting the database backend
CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.db.DatabaseCache',
        'LOCATION': 'data_cache_table',
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

LANGUAGE_CODE = 'en-au'

# TIME_ZONE = 'UTC'

TIME_ZONE = 'Australia/Sydney'


USE_I18N = True

USE_L10N = True

USE_TZ = True

MEDIA_URL = r'/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media/')

# email verification code exists time
VERIFICATION_CODE_EXISTS_TIME = 180
# email resent waiting time
RESENT_WAITING_TIME = 60

# you email server
EMAIL_SERVER = MY_EMAIL_SERVER
EMAIL_SERVER_TYPE = MY_EMAIL_SERVER_TYPE
EMAIL_SERVER_PORT = MY_EMAIL_SERVER_PORT
EMAIL_USER = MY_EMAIL_USERNAME
EMAIL_PASSWORD = MY_EMAIL_PASSWORD

# Setting minimum length of username, password
MIN_LEN_USERNAME = 6
MIN_LEN_PASSWORD = 8

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/

STATIC_URL = r'/static/'
# STATICFILES_DIRS = [
#     os.path.join(BASE_DIR, "build/static"),
# ]
